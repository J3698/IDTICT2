--NEXT--
createAccessControlContext
What it Allows:
Creation of an AccessControlContext
Potential Risks:
This allows someone to instantiate an AccessControlContext with a DomainCombiner. Extreme care must be taken when granting this
permission. Malicious code could create a DomainCombiner that augments the set of permissions granted to code, and even grant 
the code AllPermission.
--NEXT--
getDomainCombiner
What it Allows:
Retrieval of an AccessControlContext's DomainCombiner
Potential Risks:
This allows someone to query the policy via the getPermissions call, which discloses which permissions would be granted to a given 
CodeSource. While revealing the policy does not compromise the security of the system, it does provide malicious code with additional 
information which it may use to better aim an attack. It is wise not to divulge more information than necessary.
--NEXT--
getPolicy
What it Allows:
Retrieval of the system-wide security policy (specifically, of the currently-installed Policy object)
Potential Risks:
This allows someone to query the policy via the getPermissions call, which discloses which permissions would be granted to a given 
CodeSource. While revealing the policy does not compromise the security of the system, it does provide malicious code with additional 
information which it may use to better aim an attack. It is wise not to divulge more information than necessary.
--NEXT--
setPolicy
What it Allows:
Setting of the system-wide security policy (specifically, the Policy object)
Potential Risks:
Granting this permission is extremely dangerous, as malicious code may grant itself all the necessary permissions it needs to 
successfully mount an attack on the system.
--NEXT--
createPolicy.{policy type}
What it Allows:
Getting an instance of a Policy via Policy.getInstance
Potential Risks:
Granting this permission enables code to obtain a Policy object. Malicious code may query the Policy object to determine what 
permissions have been granted to code other than itself.
--NEXT--
getProperty.{key}
What it Allows:
Retrieval of the security property with the specified key
Potential Risks:
Depending on the particular key for which access has been granted, the code may have access to the list of security providers, 
as well as the location of the system-wide and user security policies. while revealing this information does not compromise the 
security of the system, it does provide malicious code with additional information which it may use to better aim an attack.
--NEXT--
setProperty.{key}
What it Allows:
Setting of the security property with the specified key
Potential Risks:
This could include setting a security provider or defining the location of the system-wide security policy. Malicious code that 
has permission to set a new security provider may set a rogue provider that steals confidential information such as cryptographic 
private keys. In addition, malicious code with permission to set the location of the system-wide security policy may point it to a 
security policy that grants the attacker all the necessary permissions it requires to successfully mount an attack on the system.
--NEXT--
insertProvider.{provider name}
What it Allows:
Addition of a new provider, with the specified name
Potential Risks:
This would allow somebody to introduce a possibly malicious provider (e.g., one that discloses the private keys passed to it) as 
the highest-priority provider. This would be possible because the Security object (which manages the installed providers) currently 
does not check the integrity or authenticity of a provider before attaching it.
--NEXT--
removeProvider.{provider name}
What it Allows:
Removal of the specified provider
Potential Risks:
This may change the behavior or disable execution of other parts of the program. If a provider subsequently requested by the 
program has been removed, execution may fail. Also, if the removed provider is not explicitly requested by the rest of the program, 
but it would normally be the provider chosen when a cryptography service is requested (due to its previous order in the list of 
providers), a different provider will be chosen instead, or no suitable provider will be found, thereby resulting in program failure.
--NEXT--
clearProviderProperties.{provider name}
What it Allows:
"Clearing" of a Provider so that it no longer contains the properties used to look up services implemented by the provider
Potential Risks:
This disables the lookup of services implemented by the provider. This may thus change the behavior or disable execution of other 
parts of the program that would normally utilize the Provider, as described under the "removeProvider.{provider name}" permission.
--NEXT--
putProviderProperty.{provider name}
What it Allows:
Setting of properties for the specified Provider
Potential Risks:
The provider properties each specify the name and location of a particular service implemented by the provider. By granting this 
permission, you let code replace the service specification with another one, thereby specifying a different implementation.
--NEXT--
removeProviderProperty.{provider name}
What it Allows:
Removal of properties from the specified Provider
Potential Risks:
This disables the lookup of services implemented by the provider. They are no longer accessible due to removal of the properties 
specifying their names and locations. This may change the behavior or disable execution of other parts of the program that would 
normally utilize the Provider, as described under the "removeProvider.{provider name}" permission.
--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

--NEXT--

What it Allows:

Potential Risks:

